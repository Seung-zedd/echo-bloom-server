
spring:
  config:
    activate:
      on-profile: prod

  # postgreSQL 설정
  datasource:
    driver-class-name: org.postgresql.Driver
    # NCP Cloud DB for PostgreSQL의 연결 정보를 입력하세요.
    url: jdbc:postgresql://<YOUR_DB_HOST>:5432/<YOUR_DB_NAME>
    username: ${PROD_POSTGRESQL_USERNAME}
    password: ${PROD_POSTGRESQL_PASSWORD}

  # jpa 설정
  jpa:
    hibernate:
      # (매우 중요) 운영 환경에서는 절대로 JPA가 스키마를 건드리지 않도록 'none'으로 설정합니다.
      ddl-auto: none
  # 카카오 로그인 설정
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_REST_API_KEY}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: <YOUR_KAKAO_REDIRECT_URI>
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
                - profile_nickname
                - profile_image
                - account_email

# jwt 설정
jwt:
  secret: ${JWT_SECRET} # 32바이트 이상의 매우 긴 무작위 문자열
  access-token-expiration-in-seconds: 3600 # 1시간 (보안을 위해 짧게 설정)
  refresh-token-expiration-in-seconds: 604800 # 7일 (사용자 편의를 위해 길게 설정)

# 운영 환경에서는 일반적으로 불필요한 SQL 로그를 남기지 않도록 설정합니다.
# common.yml의 설정을 덮어쓰고 싶다면 아래와 같이 명시적으로 레벨을 지정할 수 있습니다.
logging:
  level:
    org.hibernate.SQL: info
    org.hibernate.type.descriptor.sql: info

# Swagger 설정(운영 환경에서는 비활성화)
springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false