name: Deploy to NCP Server
on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Decode SSH Key
        id: decode_key
        run: |
          RAW_KEY=$(echo "${{ secrets.SSH_PRIVATE_KEY_BASE64 }}" | base64 -d)
          echo "raw_key<<EOF" >> $GITHUB_OUTPUT
          echo "$RAW_KEY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ steps.decode_key.outputs.raw_key }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -e

            # 1. Kill ALL previous java processes (prevents zombie JVMs and OOM)
            pkill -9 -f 'java' || true
            sleep 2

            # 2. Optional: List current running java for debugging (should be empty now)
            ps aux | grep java || true

            # 3. Prepare project
            REPO_DIR="/root/echo-bloom-server"
            if [ ! -d "$REPO_DIR" ]; then
              git clone https://github.com/checkmate-BUB/echo-bloom-server.git "$REPO_DIR"
            fi
            cd "$REPO_DIR"
            git pull origin main
            chmod +x ./gradlew

            # 4. Build with limited Gradle heap
            ./gradlew clean build -x test -Dorg.gradle.jvmargs="-Xmx1g" --no-daemon

            # 5. Run app with limited JVM heap
            nohup java -Xmx1g -Xms256m -jar -Dspring.profiles.active=dev build/libs/echo-bloom-server-0.0.1-SNAPSHOT.jar > app.log 2>&1 &

            # 6. Confirm only one Java process is running
            ps aux | grep java || true

            echo "Deployment completed"
